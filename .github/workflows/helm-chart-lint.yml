---
#
#  Copyright (c) 2022, 2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#

name: Lint and Test Charts

# Run chart linting and tests on each pull request
on:
  # Runs automatically on pushes and PRs into main and release branches, if changes to the chart have been performed
  push:
    branches:
      - main
      - 'release/*'
    paths:
      - .github/workflows/**
      - charts/**
  pull_request:
    branches:
      - main
      - 'release/*'
    paths:
      - .github/workflows/**
      - charts/**
  # Can be triggered to investigate upgrades
  workflow_dispatch:
    inputs:
      node_image:
        description: 'kindest/node image for k8s kind cluster'
        # k8s version from 3.1 release as default
        default: 'kindest/node:v1.24.6'
        required: false
        type: string
      upgrade_from:
        description: 'chart version to upgrade from'
        # chart version from 3.2 release as default
        default: 'x.x.x'
        required: false
        type: string

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.3

      - uses: ./.github/actions/setup-java

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (lint)
        run: ct lint --target-branch ${{ github.base_ref || github.ref_name }} --config charts/config/chart-testing-config.yaml

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.base_ref || github.ref_name }})
          if [[ -n "$changed" ]]; then
            echo "CHART_CHANGED=true" >> $GITHUB_ENV
          fi

      # Preparing a kind cluster to install and test charts on
      - name: Create kind cluster
        uses: container-tools/kind-action@v1
        with:
          # upgrade version, default (v0.17.0) uses node image v1.21.1 and doesn't work with more recent node image versions
          version: v0.19.0
          # default value for event_name != workflow_dispatch
          node_image: ${{ github.event.inputs.node_image || 'kindest/node:v1.24.6' }}
        if: github.event_name != 'pull_request' || env.CHART_CHANGED == 'true'

      - name: Build Java/Docker via Maven
        run: |
          ./mvnw -s settings.xml deploy -Drepo=kind-registry:5000/tractusx/ -Dmaven.deploy.skip -DskipTests -Pwith-docker-image
        if: github.event_name != 'pull_request' || env.CHART_CHANGED == 'true'

      # install the chart to the kind cluster and run helm test
      # define charts to test with the --charts parameter
      - name: Run chart-testing (install)
        run: ct install --charts charts/conforming-agent,charts/provisioning-agent,charts/remoting-agent --config charts/config/chart-testing-config.yaml --helm-extra-set-args="--set=image.registry=kind-registry:5000/"
        if: github.event_name != 'pull_request' || env.CHART_CHANGED == 'true'

      # Upgrade the released chart version with the locally available chart
      # default value for event_name != workflow_dispatch
      - name: Run helm upgrade on conforming agent
        run: |
          helm repo add tractusx-dev https://eclipse-tractusx.github.io/charts/dev
          helm install conforming tractusx-dev/conforming-agent --version ${{ github.event.inputs.upgrade_from }} --set=image.registry=kind-registry:5000/
          helm dependency update charts/conforming-agent
          helm upgrade conforming charts/conforming-agent
        if: (github.event_name != 'pull_request' || env.CHART_CHANGED == 'true') && github.event.inputs.upgrade_from != '' && github.event.inputs.upgrade_from != 'x.x.x'

      # Upgrade the released chart version with the locally available chart
      # default value for event_name != workflow_dispatch
      - name: Run helm upgrade on provisioning agent
        run: |
          helm repo add tractusx-dev https://eclipse-tractusx.github.io/charts/dev
          helm install provisioning tractusx-dev/provisioning-agent --version ${{ github.event.inputs.upgrade_from }} --set=image.registry=kind-registry:5000/
          helm dependency update charts/provisioning-agent
          helm upgrade provisioning charts/provisioning-agent
        if: (github.event_name != 'pull_request' || env.CHART_CHANGED == 'true') && github.event.inputs.upgrade_from != '' && github.event.inputs.upgrade_from != 'x.x.x'

      # Upgrade the released chart version with the locally available chart
      # default value for event_name != workflow_dispatch
      - name: Run helm upgrade on remoting agent
        run: |
          helm repo add tractusx-dev https://eclipse-tractusx.github.io/charts/dev
          helm install remoting tractusx-dev/provisioning-agent --version ${{ github.event.inputs.upgrade_from }} --set=image.registry=kind-registry:5000/
          helm dependency update charts/remoting-agent
          helm upgrade remoting charts/remoting-agent
        if: (github.event_name != 'pull_request' || env.CHART_CHANGED == 'true') && github.event.inputs.upgrade_from != '' && github.event.inputs.upgrade_from != 'x.x.x'
